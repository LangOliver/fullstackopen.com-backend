{"version":3,"sources":["components/Filter.js","components/ChangeNumberModal.js","components/PersonForm.js","services/PhonebookDataService.js","components/Person.js","components/Persons.js","components/Notification.js","index.js"],"names":["Filter","props","Form","Control","placeholder","onChange","changeFilter","ChangeNumberModal","Modal","show","onHide","closeConfirmChangeModal","Dialog","Header","closeButton","Title","Body","Footer","Button","variant","onClick","handleChangeNumberModalOK","PersonForm","Container","onSubmit","addPerson","Group","controlId","e","setNewName","target","value","newName","setNewPhoneNumber","newPhoneNumber","type","Row","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","persons","setPersons","PhoneBookDataService","filter","person","ListGroup","Item","this","name","number","className","handleDelete","React","Component","Persons","map","key","Notification","statusMessage","message","App","useState","setShow","existingPersonId","setExistingPersonId","newPerson","setNewPerson","setStatusMessage","useEffect","PhonebookDataService","console","log","clearAddPersonState","event","preventDefault","length","existingPersons","setTimeout","concat","currentFilter","includes","tempPersons","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f9dd439.chunk.js","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n            <Form.Control placeholder=\"Filter contacts \"\r\n            onChange={props.changeFilter}/>\r\n  \r\n\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n\r\n","import React,  { useState } from 'react';\r\nimport Button  from 'react-bootstrap/Button';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\n\r\nconst ChangeNumberModal = (props) => {\r\n  \r\n    return (\r\n      <Modal show = {props.show} \r\n      onHide= {props.closeConfirmChangeModal} >\r\n      <Modal.Dialog>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Update Number</Modal.Title>\r\n      </Modal.Header>\r\n    \r\n      <Modal.Body>\r\n        <p>is already added to phonebook, replace the old number with a new one?</p>\r\n      </Modal.Body>\r\n    \r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" \r\n          onClick={props.closeConfirmChangeModal}>Cancel</Button>\r\n        <Button variant=\"primary\" \r\n          onClick={props.handleChangeNumberModalOK}>OK</Button>\r\n      </Modal.Footer>\r\n    </Modal.Dialog>\r\n  </Modal>\r\n     )\r\n  }\r\n  \r\n  export default ChangeNumberModal;\r\n","import React from 'react';\r\nimport Button  from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Filter from './Filter';\r\nimport ChangeNumberModal from './ChangeNumberModal';\r\n\r\nconst PersonForm = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n            <Form onSubmit={props.addPerson} >\r\n              <Form.Group controlId=\"PhoneBookForm\">\r\n                  <Form.Control placeholder=\"First name\" \r\n                  onChange={e => props.setNewName(e.target.value)}\r\n                  value={props.newName}\r\n                   />\r\n                  <Form.Control placeholder=\"Number\" \r\n                  onChange={e => props.setNewPhoneNumber(e.target.value)}\r\n                  value={props.newPhoneNumber} \r\n                  />\r\n                  <Button variant=\"secondary\"  type=\"submit\" >add</Button>\r\n              </Form.Group>  \r\n            </Form>\r\n            <Form>\r\n              <Form.Row>\r\n                <Filter changeFilter ={props.changeFilter}></Filter>\r\n              </Form.Row>\r\n            </Form>\r\n \r\n    </Container>\r\n    \r\n    </div>\r\n   )\r\n}\r\n\r\nexport default PersonForm;\r\n\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteIt = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n} \r\nexport default { getAll, create, update, deleteIt }","import React, {useState} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport PhoneBookDataService from './../services/PhonebookDataService';\r\nimport ChangeNumberModal from './ChangeNumberModal';\r\n\r\nclass Person extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n       \r\n    }\r\n\r\n    handleDelete(id, persons, setPersons) {\r\n        PhoneBookDataService.deleteIt(id)\r\n        .then(response => {\r\n            setPersons(persons.filter(person =>\r\n                person.id !== id))\r\n      })}\r\n    \r\n    render () {\r\n        return (\r\n            <ListGroup.Item>\r\n                {this.props.person.name} {this.props.person.number} \r\n                <Button \r\n                    variant=\"outline-danger\"\r\n                    className=\"delete-btn\"\r\n                    onClick={e => this.handleDelete(this.props.person.id,\r\n                     this.props.persons, \r\n                     this.props.setPersons)}>\r\n                    X\r\n                </Button>{' '}\r\n            </ListGroup.Item>\r\n    ) \r\n    }\r\n\r\n}\r\n\r\nexport default Person;\r\n\r\n\r\n","import React from 'react';\r\nimport Person from './Person'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass Persons extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n}\r\n\r\n  render() {\r\n\r\n    return (\r\n      <ListGroup>\r\n        {this.props.persons.map(person => \r\n        <Person \r\n          key={person.id} \r\n          person={person} \r\n          persons={this.props.persons}\r\n          setPersons={this.props.setPersons}>\r\n        </Person>\r\n      )}\r\n\r\n  </ListGroup>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nexport default Persons;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\nconst Notification = ({ message: statusMessage }) => {\r\n    if (statusMessage === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={statusMessage.type}>\r\n        {statusMessage.message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification;","import ReactDOM from 'react-dom';\r\nimport React, { useState, useEffect } from 'react'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport PhonebookDataService from './services/PhonebookDataService'\r\nimport './index.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ChangeNumberModal from './components/ChangeNumberModal'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newPhoneNumber, setNewPhoneNumber] = useState('') \r\n  const [ show, setShow] = useState(false)\r\n  const [ existingPersonId, setExistingPersonId] = useState(null)\r\n  const [ newPerson, setNewPerson] = useState(null)\r\n  const [ statusMessage, setStatusMessage] = useState(null)\r\n\r\n  \r\n\r\n  // In the beginning, show all all persons\r\n   useEffect(() => {\r\n    PhonebookDataService.getAll()\r\n      .then(response => {\r\n        console.log(\"getAll response is\", response)\r\n        setPersons(response)\r\n      })\r\n  }, [])\r\n\r\n  \r\n  const handleChangeNumberModalOK = () =>  {\r\n    PhonebookDataService\r\n        .update(existingPersonId, newPerson)\r\n        .then(response => {\r\n          // Update the new number in the array\r\n          let tempPersons = [...persons]\r\n          tempPersons = tempPersons.map(person => {\r\n            if (person.id === response.id) {\r\n              return response\r\n            } \r\n            else {\r\n              return person\r\n            }\r\n            \r\n          })\r\n          setPersons(tempPersons)\r\n\r\n          }\r\n        ).catch(error => {\r\n          setStatusMessage({type:'error', message:\r\n                `Person '${newPerson.name}' was already removed from the server realMessage:' ${error}`}\r\n              )\r\n          setTimeout(() => {\r\n            setStatusMessage(null)\r\n          }, 5000)}\r\n         )\r\n    closeConfirmChangeModal()  \r\n  }\r\n  \r\n  const clearAddPersonState = () => {\r\n    setPersons(persons)\r\n    setNewName(\"\") \r\n    setNewPhoneNumber(\"\") \r\n    setNewPerson(null)\r\n    setExistingPersonId(null)\r\n  }\r\n  \r\n    const closeConfirmChangeModal = () => {\r\n      clearAddPersonState()\r\n      setShow(false)}\r\n  \r\n    const showConfirmChangeModal = () => {\r\n      setShow(true)\r\n    }\r\n\r\n  /* handles the form change of adding a Person by,\r\n  creating a new contact object, implicitly creating a new array with\r\n  the new contact included with concat and finally\r\n  resetting the default form values by changing their state hooks\r\n  */\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newPerson = {\r\n      id: persons.length +1,\r\n      name: newName,\r\n      number: newPhoneNumber\r\n    }\r\n\r\n\r\n    /* Check if there is already a person with that name\r\n    */\r\n    const existingPersons = persons.filter\r\n      (person =>  \r\n      person.name === newPerson.name) \r\n\r\n    if (existingPersons.length === 1) {\r\n      /* Found exactly one existing Contact with the same name, \r\n      lets update the number\r\n      */\r\n     setExistingPersonId(existingPersons[0].id)\r\n     setNewPerson(newPerson)\r\n     showConfirmChangeModal()\r\n    }\r\n    else if (existingPersons.length > 1) {\r\n      setStatusMessage({type: 'error', message: \r\n        `Oops, more than one person with same name, can't do anything`})\r\n      setTimeout(() => {\r\n        setStatusMessage(null)\r\n      }, 5000)\r\n      clearAddPersonState()\r\n    }\r\n    /* Add the new person if the name doesn't exist yet\r\n    */\r\n    else {\r\n      PhonebookDataService\r\n      .create(newPerson)\r\n      .then(response => {\r\n        setPersons(persons.concat(response))\r\n        setNewName(\"\") \r\n        setNewPhoneNumber(\"\") \r\n        setStatusMessage({type: 'success', message:\r\n          `Person '${newPerson.name}' was added to the server`}\r\n        )\r\n        setTimeout(() => {\r\n          setStatusMessage(null)\r\n        }, 5000)\r\n        })\r\n         \r\n    }\r\n  }\r\n    /* Reload the Persons from the database, \r\n    and apply filter only when the string is not an null/empty string,\r\n    else just return the whole reponse\r\n    */\r\n  const changeFilter = (event) => {\r\n   \r\n   const currentFilter = event.target.value\r\n   PhonebookDataService.getAll()\r\n   .then(response => {\r\n     setPersons(!currentFilter ? response : response.filter\r\n      (person =>  \r\n      person.name.includes(currentFilter)\r\n    ))\r\n   })\r\n   \r\n  \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"app-title\">Phonebook</h2>\r\n      <Notification \r\n      message = {statusMessage} />\r\n      <PersonForm addPerson={addPerson} \r\n        newName = {newName} setNewName={setNewName}\r\n        newPhoneNumber={newPhoneNumber} \r\n        setNewPhoneNumber={setNewPhoneNumber}\r\n        changeFilter = {changeFilter}>\r\n      </PersonForm>\r\n      <br></br>\r\n      <h2 className=\"contacts\">Numbers</h2>\r\n    \r\n      <Persons \r\n        persons={persons}\r\n        setPersons={setPersons}>\r\n      </Persons>\r\n      <ChangeNumberModal show = {show} \r\n        handleChangeNumberModalOK={handleChangeNumberModalOK}\r\n        closeConfirmChangeModal={closeConfirmChangeModal}\r\n      />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}